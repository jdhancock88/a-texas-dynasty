{"version":3,"sources":["flythrough_min.js"],"names":["$","fn","flythrough","frameObj","checkDirection","thisObj","self","children","unbind","hasClass","frame","checkButtons","advanceFrames","rewindFrames","hide","settings","frames","length","show","direction","type","fadeOut","remove","video","play","preloadImages","imagePath","checkImage","frameControl","currentTime","end","paused","pause","checkOverlays","checkLabels","bindClick","bind","this","window","width","fadeIn","text","satCredit","undefined","overlayHead","find","html","overlayText","labels","each","k","v","label","y","x","append","attr","cutline","extend","console","error","arguments","controls","addEventListener","click","addClass","setTimeout","removeClass","jQuery"],"mappings":"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","file":"flythrough_min.js","sourcesContent":["(function ($) {\n\n\t$.fn.flythrough = function(frameObj) {\n\n\t\t//////////////////////////////////////////////////////\n\t\t////  PLUGIN SETUP ///////////////////////////////////\n\t\t//////////////////////////////////////////////////////\n\n\t  // configure your flythrough frames below\n\t\tvar settings = $.extend({\n\t\t\tframes: []\n\t\t}, frameObj);\n\n\t\tif (settings.frames.length === 0) {\n\t\t\tconsole.error(\"Frames must be an array with at least one object.\");\n\t\t}\n\n\t\t//////////////////////////////////////////////////////\n\t\t////  VARIABLE SETUP /////////////////////////////////\n\t\t//////////////////////////////////////////////////////\n\n\t\tvar video = this.children(\".flyVideo\");\n\t\tvar frame = 0;\n\t\tvar self = this;\n    var direction = \"\";\n\n\n\n\t\t//////////////////////////////////////////////////////\n\t\t////  FUNCTIONS SETUP ////////////////////////////////\n\t\t//////////////////////////////////////////////////////\n\n\n\t\t/*\n\t\t------------------------------------------------------\n\t\tCHECK DIRECTION\n\t\t------------------------------------------------------\n\t\t*/\n\n\t\t// determine if we are going forward or backwards\n\t\tfunction checkDirection(thisObj) {\n\t\t\t// unbind the click function from the buttons to prevent clicks in mid animation\n\t\t\tself.children(\".flyButton\").unbind(\"click\");\n\n\t\t\t//check for direction based on button id\n\t\t\tif (thisObj.hasClass(\"play\") === true) {\n\t\t\t\tframe++;\t// advance frame count\n\t\t\t\tcheckButtons(); // check buttons to see if we need to hide any\n\t\t\t\tadvanceFrames(); // run advance frame functions\n\t\t\t} else {\n\t\t\t\tframe--; // rewind frame count\n\t\t\t\tcheckButtons(); // check buttons to see if we need to hide any\n\t\t\t\trewindFrames(); // run rewind frame functions\n\t\t\t}\n\n\t\t}\n\n\n\t\t/*\n\t\t------------------------------------------------------\n\t\tCHECK BUTTONS\n\t\t------------------------------------------------------\n\t\t*/\n\n\t\t// if we are at the beginning or end of the flythrough, we're going to hide the corresponding buttons\n\t\tfunction checkButtons() {\n\t\t\tif (frame === 0) {\n\t\t\t\tself.children(\".rewind\").hide(); // hide the rewind button on the first frame\n\t\t\t} else if (frame === (settings.frames.length - 1)) {\n\t\t\t\tself.children(\".play\").hide(); // hide the play button on the last frame\n\t\t\t} else {\n\t\t\t\tself.children(\".flyButton\").show(); //if on any frame other than the first or last, show both buttons\n\t\t\t}\n\t\t}\n\n\n\t\t/*\n\t\t------------------------------------------------------\n\t\tADVANCE FRAMES\n\t\t------------------------------------------------------\n\t\t*/\n\n\t\tfunction advanceFrames() {\n      // set the direction that we're moving. This is used in the checkImage function\n      direction = \"play\";\n\t\t\t// if the frame is a waypoint, play the video to the next waypoint\n\t\t\tif (settings.frames[frame].type === \"waypoint\") {\n\t\t\t\tself.children(\".imageOverlay\").fadeOut(250); // hide all the overlays before the animation starts\n\t\t\t\tself.children(\".label\").remove(); // remove all labels\n\t\t\t\tvideo[0].play(); // start the animation\n\t\t\t}\n\n      // check to see if the next frame is an image, and if it is, preload that image\n      if ((frame + 1) < settings.frames.length && settings.frames[frame + 1].type === \"image\") {\n        $.preloadImages(settings.frames[frame + 1].imagePath);\n      }\n\n\t\t\tcheckImage(); // if the frame is an image, display that frame\n\n\t\t}\n\n\n\t\t/*\n\t\t------------------------------------------------------\n\t\tFRAME CONTROL\n\t\t------------------------------------------------------\n\t\t*/\n\n\t\t// this function runs as the video is playing. it controls the pausing of the animation at the correct times\n\t\t// along with displaying the correct overlays and labels\n\t\tfunction frameControl() {\n\n\t\t\t// check to see if animation has hit the current frames end time, and that video isn't already paused\n\t\t\t// we check to see if it's paused because time is funny, and sometimes this event fires after that time has passed but the video hasn't paused yet\n\t\t\tif (video[0].currentTime >= settings.frames[frame].end && video[0].paused !== true) {\n\t\t\t\tvideo[0].pause();\n\n\t\t\t\tcheckOverlays(); // if that frame has an overlay, build it and show it\n\t\t\t\tcheckLabels(); // if the frame has labels, construct each label and append it to the flythrough\n\n\t\t\t\t// rebind the click function to the flythrough labels\n\t\t\t\tbindClick();\n\t\t\t}\n\t\t}\n\n\n\t\t/*\n\t\t------------------------------------------------------\n\t\tREWIND FRAMES\n\t\t------------------------------------------------------\n\t\t*/\n\n\t\tfunction rewindFrames() {\n      // set the direction that we're moving. This is used in the checkImage function\n      direction = \"rewind\";\n\t\t\tif (settings.frames[frame].type === \"waypoint\") {\n\t\t\t\tself.children(\".imageOverlay\").fadeOut(250); // hide any imageOverlays before the animation starts\n\t\t\t\tself.children(\".label\").remove(); // remove all labels\n\n\t\t\t\tcheckOverlays(); // if that frame has an overlay, build it and show it\n\t\t\t\tcheckLabels(); // if the frame has labels, construct each label and append it to the flythrough\n\n\t\t\t\tvideo[0].currentTime = settings.frames[frame].end; // set the flythrough the current frames end time, so it's ready to go forward\n\n\t\t\t\tbindClick();\n\n\t\t\t}\n\n\t\t\tcheckImage();\t// if the frame is an image, display that frame\n\n\t\t}\n\n\t\t/*\n\t\t------------------------------------------------------\n\t\tBINDING CLICKS\n\t\t------------------------------------------------------\n\t\t*/\n\n\t\tfunction bindClick() {\n\t\t\tself.children(\".flyButton\").bind(\"click\", function() {\n\t\t\t\treturn checkDirection($(this));\n\t\t\t});\n\t\t}\n\n\n\t\t/*\n\t\t------------------------------------------------------\n\t\tCHECKING IF CURRENT FRAME HAS OVERLAYS\n\t\t------------------------------------------------------\n\t\t*/\n\n\t\t// checking if current frame has overlays and building out the overlays\n\t\tfunction checkOverlays() {\n\t\t\tif ($(window).width() <= 800) {\n\t\t\t\tself.children(\".satCredit\").fadeIn(250).text(settings.frames[frame].satCredit); // update satelitte imagery credit\n\t\t\t}\n\t\t\tif (settings.frames[frame].overlayHead !== undefined ) {\n\t\t\t\tself.find(\".textOverlay h4\").html(settings.frames[frame].overlayHead);\n\t\t\t}\n\n\t\t\tif (settings.frames[frame].overlayText !== undefined) {\n\t\t\t\tself.find(\".textOverlay p\").html(settings.frames[frame].overlayText);\n\t\t\t}\n\n\t\t\tif (settings.frames[frame].overlayHead !== undefined || settings.frames[frame].overlayText !== undefined) {\n\t\t\t\tself.children(\".textOverlay\").fadeIn(250);\n\t\t\t}\n\t\t}\n\n\n\t\t/*\n\t\t------------------------------------------------------\n\t\tCHECKING IF CURRENT FRAME HAS LABELS\n\t\t------------------------------------------------------\n\t\t*/\n\n\t\t// checking if the current frame has labels, and building out those labels\n\t\tfunction checkLabels() {\n\t\t\tif (settings.frames[frame].labels !== undefined) {\n\t\t\t\t$.each(settings.frames[frame].labels, function(k,v) {\n\t\t\t\t\tvar label = \"\";\n\t\t\t\t\tlabel +=\"<span class='label' style='top: \" + settings.frames[frame].labels[k].y + \"; left: \" + settings.frames[frame].labels[k].x + \";'>\";\n\t\t\t\t\tlabel += settings.frames[frame].labels[k].text;\n\t\t\t\t\tlabel += \"</span>\";\n\t\t\t\t\tself.append(label);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\n\t\t/*\n\t\t------------------------------------------------------\n\t\tCHECKING IF CURRENT FRAME HAS IMAGES\n\t\t------------------------------------------------------\n\t\t*/\n\n\t\t// checking if the current frame is an image\n\t\tfunction checkImage() {\n\t\t\tif (settings.frames[frame].type === \"image\") {\n\t\t\t\t\tself.children(\".satCredit\").fadeOut(250);\n\t\t\t\t\tself.children(\".textOverlay\").fadeOut(250); // hide all the overlays\n\t\t\t\t\tself.children(\".label\").remove(); //remove all labels\n\n\t\t\t\t\tself.find(\".imageOverlay img\").attr(\"src\", settings.frames[frame].imagePath).attr(\"alt\", settings.frames[frame].cutline); // update the image overlay img tag with the src path and alt text\n\n\t\t\t\t\tif (settings.frames[frame].cutline !== undefined) {\n\t\t\t\t\t\tself.find(\".imageOverlay .cutline\").html(settings.frames[frame].cutline); // update the image overlay cutline\n\t\t\t\t\t}\n\n          if (direction === \"play\" && settings.frames[frame - 1].type !== \"image\") {\n\t\t\t\t    self.children(\".imageOverlay\").fadeIn(250); // display the image overlay\n          } else if (direction === \"rewind\" && settings.frames[frame + 1].type !== \"image\") {\n            self.children(\".imageOverlay\").fadeIn(250); // display the image overlay\n          }\n\n\n\t\t\t\t\tvideo[0].currentTime = settings.frames[frame].end; // jump the video's current time to the current frame's end\n\n\t\t\t\t\t//reattach the click event\n\t\t\t\t\tbindClick();\n\t\t\t}\n\t\t}\n\n\n\t\t/*\n\t\t------------------------------------------------------\n\t\tPRELOADING IMAGES\n\t\t------------------------------------------------------\n\t\t*/\n\n    // preloading image function\n    $.preloadImages = function() {\n      $(\"<img />\").attr(\"src\", arguments[0]);\n    };\n\n\n\t\t//////////////////////////////////////////////////////\n\t\t//// RUNNING OF FUNCTIONS ////////////////////////////\n\t\t//////////////////////////////////////////////////////\n\n\t\t// check the buttons for the first time\n\t\tcheckButtons();\n\n\t\tvideo[0].controls = false; // remove the video controls\n\t\tvideo[0].addEventListener(\"timeupdate\", frameControl, false); // add a listener for when the video is playing\n\n\n\t\t// attach the click event to the flythrough buttons that adavances or rewinds the flythrough\n\t\tthis.children(\".flyButton\").bind(\"click\", function() {\n\n\t\t\treturn checkDirection($(this));\n\t\t});\n\n\t\t// clicking into the flythrough through the titlecard\n\t\tthis.find(\".titleButton\").click(function() {\n\n\t\t\tself.find(\".titleCard\").remove(); // remove title card\n\n\n\t\t\tvideo[0].currentTime = settings.frames[frame].end; // set the video to the end of the first frame so it's ready to move when the play button is clicked\n\n\t\t\tif (settings.frames[frame].satCredit !== undefined) {\n\t\t\t\tself.children(\".satCredit\").text(settings.frames[frame].satCredit); // update the sat credit with the first slide\n\t\t\t}\n\n\t\t\t//add highlighting class animation to the play button to make it standout\n\t\t\tself.find(\".play\").addClass(\"buttonHighlight\");\n\n\t\t\t//remove the highlight class animation so it doesn't show up again later\n\t\t\tsetTimeout(function() {\n\t\t\t\tself.find(\".play\").removeClass(\"buttonHighlight\");\n\t\t\t}, 2000);\n\n\t\t\tcheckOverlays(); // add overlays, if any\n\t\t\tcheckLabels(); // add labels, if any\n\t\t\tcheckImage(); // add image, if any\n\t\t});\n\n\n\t\treturn this;\n\n\t};\n\n}(jQuery));\n"],"sourceRoot":"/source/"}