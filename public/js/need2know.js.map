{"version":3,"sources":["need2know.js"],"names":["$","fn","need2know","options","showGlossary","thisObj","entry","y","offset","top","x","parent","left","lineheight","width","parseInt","css","lookup","attr","settings","glossary","each","k","v","name","self","display","spacer","find","html","definition","setTimeout","addClass","image","src","alt","imageAlt","hideGlossary","removeClass","extend","theme","this","preloadImages","arguments","i","length","on","click","off","jQuery"],"mappings":"CAAC,SAAUA,GACTA,EAAEC,GAAGC,UAAY,SAASC,GA4BxB,QAASC,GAAaC,GAEtB,GAYIC,GAZAC,EAAIF,EAAQG,SAASC,IACrBC,EAAIL,EAAQM,SAASH,SAASI,KAE9BC,GADaR,EAAQS,QACRC,SAASV,EAAQM,SAASK,IAAI,iBAG3CF,EAAQT,EAAQM,SAASG,QAGzBG,EAASZ,EAAQa,KAAK,aAM1BlB,GAAEmB,EAASC,UAAUC,KAAK,SAASC,EAAEC,GAChCA,EAAEC,OAASP,IACdX,EAAQiB,KAKVE,EAAKT,KACJU,QAAW,QACXjB,IAAOF,EAAIM,EAAaM,EAASQ,OACjCf,KAAQF,EACRI,MAASA,IAEVW,EAAKG,KAAK,MAAMC,KAAKvB,EAAMkB,MAC3BC,EAAKG,KAAK,KAAKC,KAAKvB,EAAMwB,YAExBC,WAAW,WACTN,EAAKO,SAAS,iBACb,GAGD1B,EAAM2B,MACTR,EAAKG,KAAK,OAAOV,MAChBQ,QAAW,QACXQ,IAAO5B,EAAM2B,MACbE,IAAO7B,EAAM8B,WAGdX,EAAKG,KAAK,OAAOZ,IAAI,UAAW,QAKlC,QAASqB,KACNZ,EAAKa,YAAY,gBACjBP,WAAW,WACTN,EAAKT,IAAI,UAAW,SACnB,KAhFL,GAAIG,GAAWnB,EAAEuC,QACfZ,OAAQ,GACRa,MAAO,OACPpB,aACCjB,GAGCsB,EAAOgB,IAcX,KAZuB,UAAnBtB,EAASqB,OACXC,KAAKT,SAAS,cAOhBhC,EAAE0C,cAAgB,WACjB1C,EAAE,WAAWkB,KAAK,MAAOyB,UAAU,KAG/BC,EAAE,EAAGA,EAAEzB,EAASC,SAASyB,OAAQD,IACtC5C,EAAE0C,cAAcvB,EAASC,SAASwB,GAAGX,MA8DtCjC,GAAE,UAAU8C,GAAG,YAAa,WAC3B1C,EAAaJ,EAAEyC,SAIhBzC,EAAE,UAAU8C,GAAG,WAAY,WAC1BT,MAIDrC,EAAE,UAAU+C,MAAM,WACjB/C,EAAE,UAAUgD,IAAI,YAChB5C,EAAaJ,EAAEyC,SAIhBhB,EAAKG,KAAK,gBAAgBkB,GAAG,QAAS,WACrCT,IACArC,EAAE,UAAU8C,GAAG,WAAY,WAC1BT,UAOHY","file":"need2know.js","sourcesContent":["(function ($) {\n  $.fn.need2know = function(options) {\n\n    var settings = $.extend({\n      spacer: 10,\n      theme: \"dark\",\n      glossary: []\n    }, options);\n\n\n    var self = this;\n\n    if (settings.theme === \"light\") {\n      this.addClass(\"whiteTheme\");\n    }\n\n    //////////////////////////////////////////////////////\n\t\t////  IMAGE PRELOADER ////////////////////////////////\n\t\t//////////////////////////////////////////////////////\n\n    $.preloadImages = function() {\n    \t$(\"<img />\").attr(\"src\", arguments[0]);\n    };\n\n    for (i=0; i<settings.glossary.length; i++) {\n  \t\t$.preloadImages(settings.glossary[i].image);\n  \t}\n\n\n    function showGlossary(thisObj) {\n  \t\t// grabbing x and y coordinates for placement of the glossary popup\n  \t\tvar y = thisObj.offset().top;\n  \t\tvar x = thisObj.parent().offset().left;\n  \t\tvar glossWidth = thisObj.width();\n  \t\tvar lineheight = parseInt(thisObj.parent().css(\"line-height\"));\n\n  \t\t// getting the width of the parent element to set our glossary popup width\n  \t\tvar width = thisObj.parent().width();\n\n  \t\t// getting the entry in the glossary from the gloss span\n  \t\tvar lookup = thisObj.attr(\"data-entry\");\n\n  \t\t// an index variable that will be used to find the entry in the glossary\n  \t\tvar entry;\n\n  \t\t// run through the glossary entries array, and if the entry variable matches the object's name in the array, set the index to that position within the array\n  \t\t$(settings.glossary).each(function(k,v) {\n  \t\t\tif (v.name === lookup) {\n  \t\t\t\tentry = v;\n  \t\t\t}\n  \t\t});\n\n  \t\t// position the glossary popup and populate the content with the entry definition\n  \t\tself.css({\n  \t\t\t\"display\": \"block\",\n  \t\t\t\"top\": y + lineheight + settings.spacer,\n  \t\t\t\"left\": x,\n  \t\t\t\"width\": width\n  \t\t});\n  \t\tself.find(\"h6\").html(entry.name);\n  \t\tself.find(\"p\").html(entry.definition);\n\n      setTimeout(function() {\n        self.addClass(\"glossDisplay\");\n      }, 0);\n\n  \t\t// if an entry has an image, populate the image tag with the appropriate parameters from the entry. if there's no image in the entry, hide the image\n  \t\tif (entry.image) {\n  \t\t\tself.find(\"img\").attr({\n  \t\t\t\t\"display\": \"block\",\n  \t\t\t\t\"src\": entry.image,\n  \t\t\t\t\"alt\": entry.imageAlt\n  \t\t\t});\n  \t\t} else {\n  \t\t\tself.find(\"img\").css(\"display\", \"none\");\n  \t\t}\n  \t}\n\n  \t// hiding the glossary\n  \tfunction hideGlossary() {\n      self.removeClass(\"glossDisplay\");\n      setTimeout(function() {\n        self.css(\"display\", \"none\");\n      }, 250);\n  \t}\n\n  \t// display and build the glossary popup on mouseover\n  \t$(\".gloss\").on(\"mouseover\", function() {\n  \t\tshowGlossary($(this));\n  \t});\n\n  \t// hide on mouseout\n  \t$(\".gloss\").on(\"mouseout\", function() {\n  \t\thideGlossary();\n  \t});\n\n  \t// display and build the glossary popup on click, and unbind the mouseout function\n  \t$(\".gloss\").click(function() {\n  \t\t$(\".gloss\").off(\"mouseout\");\n  \t\tshowGlossary($(this));\n  \t});\n\n  \t// clicking the close button\n  \tself.find(\".closeButton\").on(\"click\", function() {\n  \t\thideGlossary();\n  \t\t$(\".gloss\").on(\"mouseout\", function() {\n  \t\t\thideGlossary();\n  \t\t});\n  \t});\n\n\n  };\n\n}(jQuery));\n"],"sourceRoot":"/source/"}